{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","Good","good","setSelectedGood","selectedGood","setNoGoods","IS_SELECTED_GOOD","className","onClick","type","App","useState","noGoods","map","ReactDOM","render","document","getElementById"],"mappings":"2NAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAO,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,gBAAiBC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WACpDC,EAAmBJ,IAASE,EAElC,OACE,qBACE,UAAQ,OACRG,UAAWD,EAAmB,+BAAiC,GAFjE,UAIE,6BACE,wBACEE,QAAS,WACHF,GACFH,EAAgB,IAChBE,GAAW,KAEXF,EAAgBD,GAChBG,GAAW,KAGf,UAASC,EAAgB,eAAoB,YAC7CG,KAAK,SACLF,UAAS,iBAAYD,EAAmB,UAAY,IAZtD,SAcGA,EAAmB,IAAM,QAG9B,oBAAI,UAAQ,YAAYC,UAAU,eAAlC,SACGL,QAMIQ,EAAM,WACjB,MAAwCC,mBAAS,OAAjD,mBAAOP,EAAP,KAAqBD,EAArB,KACA,EAA8BQ,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBP,EAAhB,KAEA,OACE,uBAAME,UAAU,oBAAhB,WACe,IAAZK,GACD,oBAAIL,UAAU,sCAAd,gCAGa,IAAZK,EACC,qBAAIL,UAAU,sCAAd,oBACMH,EADN,gBAGE,wBACEI,QAAS,WACPH,GAAW,GACXF,EAAgB,KAElB,UAAQ,cACRM,KAAK,SACLF,UAAU,mBAId,KAGF,uBAAOA,UAAU,QAAjB,SACE,gCACGP,EAAMa,KAAI,SAAAX,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,EACNE,aAAcA,EACdD,gBAAiBA,EACjBE,WAAYA,GACPH,cCnFnBY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ab7f5b35.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const Good = ({ good, setSelectedGood, selectedGood, setNoGoods }) => {\n  const IS_SELECTED_GOOD = good === selectedGood;\n\n  return (\n    <tr\n      data-cy=\"Good\"\n      className={IS_SELECTED_GOOD ? 'has-background-success-light' : ''}\n    >\n      <td>\n        <button\n          onClick={() => {\n            if (IS_SELECTED_GOOD) {\n              setSelectedGood('');\n              setNoGoods(false);\n            } else {\n              setSelectedGood(good);\n              setNoGoods(true);\n            }\n          }}\n          data-cy={IS_SELECTED_GOOD ? `RemoveButton` : 'AddButton'}\n          type=\"button\"\n          className={`button ${IS_SELECTED_GOOD ? 'is-info' : ''}`}\n        >\n          {IS_SELECTED_GOOD ? '-' : '+'}\n        </button>\n      </td>\n      <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n        {good}\n      </td>\n    </tr>\n  );\n};\n\nexport const App = () => {\n  const [selectedGood, setSelectedGood] = useState('Jam');\n  const [noGoods, setNoGoods] = useState(true);\n\n  return (\n    <main className=\"section container\">\n      {noGoods === false && (\n      <h1 className=\"title is-flex is-align-items-center\">No goods selected</h1>\n      )}\n\n      {noGoods === true ? (\n        <h1 className=\"title is-flex is-align-items-center\">\n          {`${selectedGood} is selected`}\n\n          <button\n            onClick={() => {\n              setNoGoods(false);\n              setSelectedGood('');\n            }}\n            data-cy=\"ClearButton\"\n            type=\"button\"\n            className=\"delete ml-3\"\n          />\n        </h1>\n      ) : (\n        null\n      )}\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map(good => (\n            <Good\n              good={good}\n              selectedGood={selectedGood}\n              setSelectedGood={setSelectedGood}\n              setNoGoods={setNoGoods}\n              key={good}\n            />\n          ))}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}